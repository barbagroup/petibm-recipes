# Dockerfile for PetIBM-0.5.1

FROM nvidia/cuda:10.1-devel-ubuntu16.04 as build
MAINTAINER Olivier Mesnard <mesnardo@gwu.edu>

ENV CUDA_VERSION=10.1
ENV CUDA_DIR=/usr/local/cuda-${CUDA_VERSION}

# Install base system.
COPY ssh_config /root/.ssh/config
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        autotools-dev \
        bison \
        build-essential \
        ca-certificates \
        cmake \
        curl \
        flex \
        gfortran \
        git \
        pkg-config \
        python-dev \
        unzip \
        wget && \
    apt-get install -y --no-install-recommends \
        libibverbs1 libibverbs-dev ibverbs-utils librdmacm1 rdmacm-utils \
        ibutils ibacm libibcm1 libibmad5 libibumad3 opensm libopensm5a \
        srptools perftest infiniband-diags ibsim-utils \
        libmthca1 libmlx4-1 libmlx5-1 mstflint \
        libdapl2 dapl2-utils && \
    apt-get install -y --no-install-recommends \
        openssh-server \
        openssh-client && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \
    mkdir /var/run/sshd && \
    ssh-keygen -A && \
    sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config && \
    sed 's@session\s*required\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd && \
    ssh-keygen -f /root/.ssh/id_rsa -t rsa -N '' && \
    chmod 600 /root/.ssh/config && \
    chmod 700 /root/.ssh && \
    cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys

# Build OpenMPI.
ENV OMPI_SERIES=3.1
ENV OMPI_VERSION=3.1.4
RUN TARBALL=openmpi-${OMPI_VERSION}.tar.gz && \
    URL=https://download.open-mpi.org/release/open-mpi/v${OMPI_SERIES}/${TARBALL} && \
    wget ${URL} -P /tmp && \
    OMPI_DIR=/opt/openmpi/${OMPI_VERSION} && \
    mkdir -p ${OMPI_DIR}/build && \
    tar -xzf /tmp/${TARBALL} -C ${OMPI_DIR} --strip-components=1 && \
    cd ${OMPI_DIR}/build && \
    ${OMPI_DIR}/configure --prefix=/usr/local/openmpi-${OMPI_VERSION} && \
    make && make install && \
    rm -f /tmp/${TARBALL}
ENV OMPI_DIR=/usr/local/openmpi-${OMPI_VERSION}

ENV PATH=${OMPI_DIR}/bin:${PATH}
ENV CPATH=${OMPI_DIR}/include:${CPATH}

# Build PETSc in optimized mode.
ENV PETSC_VERSION=3.12.2
RUN TARBALL=petsc-lite-${PETSC_VERSION}.tar.gz && \
    URL=http://ftp.mcs.anl.gov/pub/petsc/release-snapshots/${TARBALL} && \
    wget ${URL} -P /tmp && \
    PETSC_DIR=/opt/petsc/${PETSC_VERSION} && \
    PETSC_ARCH=linux-gnu-openmpi-opt && \
    mkdir -p ${PETSC_DIR} && \
    tar -xzf /tmp/${TARBALL} -C ${PETSC_DIR} --strip-components=1 && \
    cd ${PETSC_DIR} && \
    ./configure \
      --prefix=/usr/local/petsc-${PETSC_VERSION} \
      PETSC_DIR=${PETSC_DIR} \
      PETSC_ARCH=${PETSC_ARCH} \
      COPTFLAGS="-O3" \
      CXXOPTFLAGS="-O3" \
      --with-fc=0 \
      --with-shared-libraries=1 \
      --with-pic=1 \
      --with-cxx-dialect="C++11" \
      --with-debugging=0 \
      --with-mpi-dir=${OMPI_DIR} \
      --download-hdf5 \
      --download-f2cblaslapack \
      --download-hypre \
      --download-ptscotch \
      --download-metis \
      --download-parmetis \
      --download-superlu_dist && \
    make PETSC_DIR=${PETSC_DIR} PETSC_ARCH=${PETSC_ARCH} all && \
    make PETSC_DIR=${PETSC_DIR} PETSC_ARCH=${PETSC_ARCH} install && \
    rm -f /tmp/${TARBALL}
ENV PETSC_DIR=/usr/local/petsc-${PETSC_VERSION}

# Build AmgX.
ENV AMGX_VERSION=2.1
ENV AMGX_SHA=cf285c118726f5d1e8eb740d4936dd0bdaaf9b48
RUN REPO=https://github.com/NVIDIA/AMGX && \
    AMGX_DIR=/opt/amgx/${AMGX_VERSION} && \
    AMGX_ARCH=linux-gnu-openmpi-opt && \
    git clone ${REPO} ${AMGX_DIR} && \
    cd ${AMGX_DIR} && \
    git checkout -b use4petibm ${AMGX_SHA} && \
    BUILDDIR=${AMGX_DIR}/${AMGX_ARCH}/build && \
    mkdir -p ${BUILDDIR} && \
    cd ${BUILDDIR} && \
    cmake ${AMGX_DIR} \
      -DCMAKE_BUILD_TYPE="Release" \
      -DCMAKE_INSTALL_PREFIX=/usr/local/amgx-${AMGX_VERSION} \
      -DCMAKE_C_COMPILER=mpicc \
      -DCMAKE_C_FLAGS_PROFILE="-O3 -DNDEBUG" \
      -DCMAKE_CXX_COMPILER=mpicxx \
      -DCMAKE_CXX_FLAGS_PROFILE="-O3 -DNDEBUG" \
      -DMPI_CXX_COMPILER=mpicxx \
      -DMPI_C_COMPILER=mpicc \
      -DCUDA_ARCH="35 37 60 70" \
      -DCUDA_HOST_COMPILER=/usr/bin/gcc-5 && \
    make -j"$(nproc)" all && \
    make install
ENV AMGX_DIR=/usr/local/amgx-${AMGX_VERSION}

# Build and install PetIBM.
ENV PETIBM_VERSION=0.5.1
RUN TARBALL=v${PETIBM_VERSION}.tar.gz && \
    URL=https://github.com/barbagroup/PetIBM/archive/${TARBALL} && \
    wget ${URL} -P /tmp && \
    PETIBM_DIR=/opt/petibm/${PETIBM_VERSION} && \
    PETIBM_ARCH=linux-gnu-openmpi-opt && \
    BUILDDIR=${PETIBM_DIR}/${PETIBM_ARCH}/build && \
    mkdir -p ${BUILDDIR} && \
    tar -xzf /tmp/${TARBALL} -C ${PETIBM_DIR} --strip-components=1 && \
    cd ${BUILDDIR} && \
    ${PETIBM_DIR}/configure --prefix=/usr/local/petibm-${PETIBM_VERSION} \
      CC=mpicc \
      CFLAGS="-w -O3 -std=c++14" \
      CXX=mpicxx \
      CXXFLAGS="-w -O3 -std=c++14" \
      --enable-static=no \
      --with-petsc-dir=${PETSC_DIR} \
      --with-petsc-arch="" \
      --with-cuda-dir=${CUDA_DIR} \
      --with-amgx-dir=${AMGX_DIR} \
      --enable-amgxwrapper \
      --enable-yamlcpp \
      --enable-gtest && \
    make -j"$(nproc)" all && \
    make check && \
    make install && \
    rm -f /tmp/${TARBALL}
ENV PETIBM_DIR=/usr/local/petibm-${PETIBM_VERSION}

EXPOSE 23
CMD ["/usr/sbin/sshd", "-D", "-p", "23"]
